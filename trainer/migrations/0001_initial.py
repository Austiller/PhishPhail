# Generated by Django 2.1.3 on 2019-04-21 02:07

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('brand_name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='DomainPrefix',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('domain_prefix', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='FQDN',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fqdn', models.CharField(max_length=1000)),
                ('fqdn_type', models.CharField(choices=[('m', 'Malicious'), ('b', 'Benign'), ('u', 'Unknown')], default='u', max_length=25)),
                ('for_training', models.BooleanField(default=False, verbose_name='Use For Training')),
            ],
        ),
        migrations.CreateModel(
            name='FQDNInstance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model_match', models.CharField(max_length=128)),
                ('fqdn_subdomain', models.CharField(max_length=200)),
                ('fqdn_domain', models.CharField(max_length=200)),
                ('brand_domain_match', models.BooleanField(default=False)),
                ('brand_subdomain_match', models.BooleanField(default=False)),
                ('entropy', models.FloatField()),
                ('fqdn', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trainer.FQDN')),
            ],
        ),
        migrations.CreateModel(
            name='KeyWord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keyword', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Model',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model_name', models.CharField(default=False, max_length=128, null=True)),
                ('model_algorithm', models.CharField(default=False, max_length=128, null=True)),
                ('model_creation_date', models.DateTimeField(null=True)),
                ('model_malicious_count', models.IntegerField(default=0)),
                ('model_benign_count', models.IntegerField(default=0)),
                ('accuracy_training_set', models.FloatField(default=0.0)),
                ('accuracty_test_set', models.FloatField(default=0.0)),
                ('accuracy_confusion_matrix', models.FloatField(default=0.0)),
                ('confusion_matrix', models.FloatField(default=0.0)),
                ('model_binary', models.BinaryField(null=True)),
                ('model_attributes', models.BinaryField(null=True)),
                ('set_as_default', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='SquatedWord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('squated_word', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag_name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='TopLevelDomain',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tld', models.CharField(max_length=10)),
                ('tld_tags', models.ManyToManyField(to='trainer.Tag')),
            ],
        ),
        migrations.AddField(
            model_name='squatedword',
            name='squated_tag',
            field=models.ManyToManyField(to='trainer.Tag'),
        ),
        migrations.AddField(
            model_name='keyword',
            name='keyword_tag',
            field=models.ManyToManyField(to='trainer.Tag'),
        ),
        migrations.AddField(
            model_name='fqdninstance',
            name='fqdn_keywords',
            field=models.ManyToManyField(to='trainer.KeyWord'),
        ),
        migrations.AddField(
            model_name='fqdninstance',
            name='fqdn_tags',
            field=models.ManyToManyField(to='trainer.Tag'),
        ),
        migrations.AddField(
            model_name='fqdninstance',
            name='match_tlds',
            field=models.ManyToManyField(to='trainer.TopLevelDomain'),
        ),
        migrations.AddField(
            model_name='brand',
            name='brand_category',
            field=models.ManyToManyField(to='trainer.Tag'),
        ),
    ]
